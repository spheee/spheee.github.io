(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{235:function(e,r,t){"use strict";t.r(r);var o=t(0),p=Object(o.a)({},(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"proxy"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#proxy","aria-hidden":"true"}},[e._v("#")]),e._v(" Proxy")]),e._v(" "),t("blockquote",[t("p",[e._v("美式音标：[ˈprɑːksi]"),t("br"),e._v("\n参考"),t("a",{attrs:{href:"http://es6.ruanyifeng.com/#docs/proxy",target:"_blank",rel:"noopener noreferrer"}},[e._v("Proxy"),t("OutboundLink")],1)])]),e._v(" "),t("p",[e._v("Proxy 用于修改某些操作的默认行为，等同于在语言层面做出修改，所以属于一种“元编程”（meta programming），即对编程语言进行编程。"),t("br"),e._v("\nProxy 支持的拦截操作一览，一共 13 种。")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("get(target, propKey, receiver)")]),e._v("：拦截对象属性的读取，比如proxy.foo和proxy['foo']。")]),e._v(" "),t("li",[t("code",[e._v("set(target, propKey, value, receiver)")]),e._v("：拦截对象属性的设置，比如proxy.foo = v或proxy['foo'] = v，返回一个布尔值。")]),e._v(" "),t("li",[t("code",[e._v("has(target, propKey)")]),e._v("：拦截propKey in proxy的操作，返回一个布尔值。")]),e._v(" "),t("li",[t("code",[e._v("deleteProperty(target, propKey)")]),e._v("：拦截delete proxy[propKey]的操作，返回一个布尔值。")]),e._v(" "),t("li",[t("code",[e._v("ownKeys(target)")]),e._v("：拦截Object.getOwnPropertyNames(proxy)、Object.getOwnPropertySymbols(proxy)、Object.keys(proxy)、for...in循环，返回一个数组。该方法返回目标对象所有自身的属性的属性名，而Object.keys()的返回结果仅包括目标对象自身的可遍历属性。")]),e._v(" "),t("li",[t("code",[e._v("getOwnPropertyDescriptor(target, propKey)")]),e._v("：拦截Object.getOwnPropertyDescriptor(proxy, propKey)，返回属性的描述对象。")]),e._v(" "),t("li",[t("code",[e._v("defineProperty(target, propKey, propDesc)")]),e._v("：拦截Object.defineProperty(proxy, propKey, propDesc）、Object.defineProperties(proxy, propDescs)，返回一个布尔值。")]),e._v(" "),t("li",[t("code",[e._v("preventExtensions(target)")]),e._v("：拦截Object.preventExtensions(proxy)，返回一个布尔值。")]),e._v(" "),t("li",[t("code",[e._v("getPrototypeOf(target)")]),e._v("：拦截Object.getPrototypeOf(proxy)，返回一个对象。")]),e._v(" "),t("li",[t("code",[e._v("isExtensible(target)")]),e._v("：拦截Object.isExtensible(proxy)，返回一个布尔值。")]),e._v(" "),t("li",[t("code",[e._v("setPrototypeOf(target, proto)")]),e._v("：拦截Object.setPrototypeOf(proxy, proto)，返回一个布尔值。如果目标对象是函数，那么还有两种额外操作可以拦截。")]),e._v(" "),t("li",[t("code",[e._v("apply(target, object, args)")]),e._v("：拦截 Proxy 实例作为函数调用的操作，比如proxy(...args)、proxy.call(object, ...args)、proxy.apply(...)。")]),e._v(" "),t("li",[t("code",[e._v("construct(target, args)")]),e._v("：拦截 Proxy 实例作为构造函数调用的操作，比如new proxy(...args)。")])])])}),[],!1,null,null,null);r.default=p.exports}}]);