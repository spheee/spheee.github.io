(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{223:function(t,a,s){"use strict";s.r(a);var r=s(0),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"javascript数据类型和数据结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript数据类型和数据结构","aria-hidden":"true"}},[t._v("#")]),t._v(" JavaScript数据类型和数据结构")]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",[s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Data_structures",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript数据类型和数据结构-MDN"),s("OutboundLink")],1)])]),t._v(" "),s("h2",{attrs:{id:"动态类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动态类型","aria-hidden":"true"}},[t._v("#")]),t._v(" 动态类型")]),t._v(" "),s("p",[t._v("JavaScript 是一种"),s("strong",[t._v("弱类型")]),t._v("或者说"),s("strong",[t._v("动态")]),t._v("语言。这意味着你不用提前声明变量的类型，在程序运行过程中，类型会被自动确定。这也意味着你可以使用同一个变量保存不同类型的数据。")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" foo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// foo is a Number now")]),t._v("\nfoo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bar"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// foo is a String now")]),t._v("\nfoo "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// foo is a Boolean now")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("h2",{attrs:{id:"数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据类型","aria-hidden":"true"}},[t._v("#")]),t._v(" 数据类型")]),t._v(" "),s("p",[t._v("最新的 ECMAScript 标准定义了 8 种数据类型:")]),t._v(" "),s("ul",[s("li",[t._v("7种原始类型：\n"),s("ul",[s("li",[t._v("Boolean")]),t._v(" "),s("li",[t._v("Null")]),t._v(" "),s("li",[t._v("undefined")]),t._v(" "),s("li",[t._v("Number")]),t._v(" "),s("li",[t._v("BigInt")]),t._v(" "),s("li",[t._v("String")]),t._v(" "),s("li",[t._v("Symbol")])])]),t._v(" "),s("li",[t._v("和 Object")])]),t._v(" "),s("h2",{attrs:{id:"原始值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原始值","aria-hidden":"true"}},[t._v("#")]),t._v(" 原始值")]),t._v(" "),s("p",[t._v("除 Object 以外的所有类型都是不可变的（值本身无法被改变）。我们称这些类型的值为“原始值”。")])])}),[],!1,null,null,null);a.default=e.exports}}]);