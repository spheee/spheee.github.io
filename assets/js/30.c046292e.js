(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{236:function(t,o,e){"use strict";e.r(o);var s=e(0),c=Object(s.a)({},(function(){var t=this,o=t.$createElement,e=t._self._c||o;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"symbol"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#symbol","aria-hidden":"true"}},[t._v("#")]),t._v(" Symbol")]),t._v(" "),e("blockquote",[e("p",[t._v("http://es6.ruanyifeng.com/#docs/symbol")])]),t._v(" "),e("div",{staticClass:"tip custom-block"},[e("p",[t._v("Symbol 可以创造出独一无二值，从根本上防止属性名的冲突")])]),t._v(" "),e("div",{staticClass:"tip custom-block"},[e("p",[e("code",[t._v("Symbol")]),t._v("作为属性名，该属性不会出现在"),e("code",[t._v("for...in")]),t._v("、"),e("code",[t._v("for...of")]),t._v("循环中，也不会被"),e("code",[t._v("Object.keys()")]),t._v("、"),e("code",[t._v("Object.getOwnPropertyNames()")]),t._v("、"),e("code",[t._v("JSON.stringify()")]),t._v("返回。但是，它也不是私有属性，有一个"),e("code",[t._v("Object.getOwnPropertySymbols")]),t._v("方法，可以获取指定对象的所有"),e("code",[t._v("Symbol")]),t._v("属性名。")])]),t._v(" "),e("p",[t._v("其实可以利用这一点为ES6的 class 模拟设计出私有属性和方法。")])])}),[],!1,null,null,null);o.default=c.exports}}]);